---
# pacman base package
- name: update and upgrade
  become: true
  pacman: update_cache=yes
  tags: pkg

- name: install base package
  become: true
  pacman: name={{ base_package }}
  tags: pkg

- name: install common package
  become: true
  pacman: name={{ package }}
  when: install is undefined or install!='minimal'
  tags: pkg

- import_tasks: configure_locale.yml
  tags: locale

- import_tasks: install_yay.yml
  when: install is undefined or install!='minimal'

  #- name: refresh key
  #  become: true
  #  command: pacman-key --refresh-keys

- name: has wifi ?
  shell: dmesg | grep -i "wlan"
  register: has_wifi
  changed_when: has_wifi is success
  ignore_errors: true
  tags:
    - wifi
    - network

- name: install wifi
  become: true
  pacman: name=iwd state=present
  when: has_wifi is success
  tags:
    - wifi
    - network

- name: enable and start nework systemd
  become: true
  systemd: name={{ item }} state=started enabled=yes
  with_items:
    - systemd-networkd
    - systemd-resolved
  tags: network

- import_tasks: nogui.yml
  when: not gui
  tags: nogui, pkg

- import_tasks: gui.yml
  when: gui
  tags: gui

- import_tasks: fonts.yml
  when: gui
  tags: fonts

- name: install host pacman misc packages
  become: true
  pacman:
    name: "{{ pacman_misc_package }}"
    state: present
  when: pacman_misc_package is defined
  tags: misc

- name: get host misc packages
  command: yay -Q {{ item }}
  register: misc_presence
  with_items: "{{ misc_package }}"
  changed_when: misc_presence is failed
  when: misc_package is defined
  ignore_errors: yes
  tags: misc

- name: install host misc package
  become: false
  command: /usr/bin/yay --noconfirm -S {{ item.item }}
  with_items: "{{ misc_presence.results }}"
  when: item is failed
  ignore_errors: yes
  tags: misc

- name: install host systemd network configuration
  become: true
  copy:
    src: "systemd/network/{{ item }}"
    dest: "/etc/systemd/network/{{ item }}"
  with_items: "{{ config.systemd.network }}"
  when: config.systemd.network|d(false)
  tags:
    - systemdconfig
    - service

- name: install host systemd system configuration
  become: true
  copy:
    src: "systemd/system/{{ item }}"
    dest: "/etc/systemd/system/{{ item }}"
  with_items: "{{ config.systemd.system }}"
  when: config.systemd.system|d(false)
  tags:
    - systemdconfig
    - service

- name: customize logind
  become: true
  lineinfile:
    path: "/etc/systemd/logind.conf"
    regexp: "{{ item.regexp }}"
    line:  "{{ item.line }}"
  with_items: "{{ config.systemd.logind }}"
  when: config.systemd.logind|d(false)
  tags:
    - systemdconfig
    - logind

- name: start and enable host service
  become: true
  systemd: name={{ item }} state=started enabled=yes
  with_items: "{{ host_service.start }}"
  when: host_service.start|d(false)
  tags: service

- name: enable only host service
  become: true
  systemd: name={{ item }} enabled=yes
  with_items: "{{ host_service.enable }}"
  when: host_service.enable|d(false)
  tags: service

- name: mask some host service
  become: true
  systemd: name={{ item }} masked=yes
  with_items: "{{ host_service.mask|default('') }}"
  when: host_service.mask|d(false)
  tags: mask

- name: enable user host service
  systemd: name={{ item }} user=yes state=started enabled=yes
  with_items: "{{ host_user_service.start }}"
  when: host_user_service.start|d(false)
  tags: misc


#- import_tasks: install_vpn.yml
#  tags: vpn
