---
- name: enable syncthing
  command: systemctl --user enable syncthing.service
  register: enable_syncthing
  changed_when: enable_syncthing is success
  tags: syncthing

- name: start syncthing
  command: systemctl --user start syncthing.service
  when: enable_syncthing is success
  tags: syncthing

- name: change synchting conf
  lineinfile:
    path: ~/.config/syncthing/config.xml
    regexp: '^(.*<address)>127\.0\.0\.1(.*)$'
    line: '\1>0.0.0.0\2'
    backrefs: yes
  notify: restart syncthing
  tags: syncthing

- name: "checkout dot files"
  git:
    repo: http://github.com/tyjak/archlinux
    dest: ~/src/archlinux
    remote: archlinux_branch
    version: "{{ archlinux_branch|default('master') }}"
    update: no
  tags: "dotfiles"

- name: "checkout vim files"
  git:
    repo: http://github.com/tyjak/vim-config
    dest: ~/src/vim-config
    update: no
  register: vim_config_installed
  tags: dotfiles

- name: "get stat about .config folder"
  stat:
    path: ~/.config
  register: cnfd
  tags: "dotfiles"

- name: "remove .config if it's a folder"
  file:
    path: ~/.config
    state: absent
  when: cnfd.stat.isdir is defined and cnfd.stat.isdir
  tags: "dotfiles"

- name: "link common dot files"
  file:
    state: link
    src: ~/src/{{ item.src }}
    dest: ~/{{ item.dest }}
    force: true
  with_items: "{{ link_common_items }}"
  tags: "dotfiles"

- name: "link gui dot files"
  file:
    state: link
    src: ~/src/{{ item.src }}
    dest: ~/{{ item.dest }}
    force: yes
  with_items: "{{ link_gui_items }}"
  when: gui
  tags: "dotfiles"

#FIXME: pb with initialisation without terminal
#- name: "init vim configuration"
#command: vim +PlugInstall +qall
#when: vim_config_installed|changed
#tags: dotfiles

- name: vimfile backup dir
  file: path=~/.vimfiles/bak state=directory recurse=yes
  tags: dotfiles

- name: vimfile undo dir
  file: path=~/.vimfiles/undo state=directory
  tags: dotfiles

#FIXME some config (vimb) depends on share folder, that shouldn't be

- name: test if share folder exists
  stat:
    path: ~/share
  register: shared
  tags: dotfiles, config

- name: link config files from share folder
  file:
    state: link
    src: ~/share/{{ item.src }}
    dest: ~/{{ item.dest }}
    force: true
  with_items: "{{ link_share_items }}"
  when: shared.stat.isdir is defined and shared.stat.isdir
  tags: dotfiles

- name: link config files with hardware dependecies
  file:
    state: link
    src: ~/src/{{ item.src }}
    dest: ~/{{ item.dest }}
    force: true
  with_items: "{{ link_macbook_items }}"
  when: link_macbook_items is defined
  tags: dotfiles

- import_tasks: config.yml
  when: config|default(false)
  tags: config

- import_tasks: i3.yml
  when: i3|default(false)

- import_tasks: vpn_ppp_adsnovo.yml
  when: vpn is defined and vpn.ppp|default(false)
  tags: vpn

- import_tasks: vpn_opvn_adsnovo.yml
  when: vpn is defined and vpn.openvpn|default(false)
  tags: vpn
